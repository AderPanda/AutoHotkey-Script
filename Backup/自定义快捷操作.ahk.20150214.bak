#Include WinClipAPI.ahk
#Include WinClip.ahk
;DetectHiddenText, On

;更改进程匹配模式为正则
SetTitleMatchMode Regex
#SingleInstance ignore

;-------------------------------------------------------------------------------
;~ 以下是全局键位
;-------------------------------------------------------------------------------
{
^!s::Suspend	;注意这是正文语句，因此不能放在SetTitleMatchMode之前

~LButton & r::reload

;该段落实现：单击win键位=按两次ctrl，以配合有道词典的划词翻译功能；双击win键位=原先按单次win键位；同时不影响win+t等其它快捷键
~LWin::
    If (A_ThisHotKey = A_PriorHotKey) && (A_TimeSincePriorHotkey < 300)
        Send, {Lwin}
    Else
		Send, {LControl}{LControl}
    Return

;双击esc退出当前焦点程序
~Esc::
{
;	if (A_PriorHotkey <> "~Esc" or A_TimeSincePriorHotkey > 400)  
;	{  
;		; Too much time between presses, so this isn't a double-press.  
;		KeyWait, Esc  
;		return  
;	}  
;	WinGetActiveTitle, Title
;	WinClose, %Title%
;	return

	;以上是一种写法，以下是另一种写法
	if (A_ThisHotKey = A_PriorHotKey and A_TimeSincePriorHotkey < 500)
	{
		;WinGetActiveTitle, Title
		;WinClose, %Title%
		
		;上面这种写法，有些窗口如UltraEdit不能关闭，因此改为发送alt+F4
		Send, !{F4}
	}
	return
}

;运行cmd
#c::Run cmd

;运行totalcmd
#t::Run tc

;运行firefox
#f::Run ff

;运行记事本
#n::Run notepad

;运行Sx_Renamer和Pdg2Pic，必须先将sx和pp加入环境变量，!FastRun文件夹
#s::
{
	Run sx
	Run pp
	return
}

;运行SciTE4Autohotkey
#z::Run scite

;运行docfetcher
#x::Run DocFetcher

;按下PrintScreen，自动启动snagit，且截屏
/*$PrintScreen::
{
	IfWinNotExist, ahk_class SnagIt5UI
	{
	Run sn
	;WinMinimize, ahk_class SnagIt5UI	;没必要，snagit截屏前本身就会最小化
	sleep, 1000
	}
	SendInput, +!{F8}
	return
}
*/

;老板键
;按下capslock键，隐藏当前程序，切换到指定程序（word）；再按一下，恢复上一次隐藏的程序，并激活。
;20140718 修改版：按下capslock键，检查当前是否在指定程序（word），不在的话，隐藏当前程序，切换到指定程序（word）；在的话，恢复上一次隐藏的程序，并激活。
/*以下是20140718修改前的旧版代码
bsKeyFlag := false	;true==正在被隐藏状态  false==常规状态，没处理时状态
Capslock::
	if !bsKeyFlag
	{
		WinGetClass, crntWinClass, A
		WinActivate, ahk_class OpusApp
		bsKeyFlag := !bsKeyFlag
	}
	else
	{
		WinActivate, ahk_class %crntWinClass%
		bsKeyFlag := !bsKeyFlag
	}
	return
*/
;;Capslock::send {Esc}   这是为“追音小匠”听写提供的临时快捷键
/*Capslock::
{
	IfWinNotActive ahk_class OpusApp
	{
		WinGetClass, crntWinClass, A
		WinActivate, ahk_class OpusApp
	}
	else
	{
		WinActivate, ahk_class %crntWinClass%
	}
	return
}
*/
;插入圆点无序列表符
` & 1::Send ●{Space}

;插入另一种圆点无序列表符
` & F1::Send •{Space}

;插入≥符号
` & 2::Send ≥

;插入◇符号
` & 3::Send ◇{Space}

;插入流程箭头
` & 4::Send {Space}{U+002d}{U+002d}{U+003e}{Space}

;插入方块无序列表符
/*` & 4::
{
	Send, ■{Space}
	return
}
*/
;插入三角无序列表符
` & 5::Send, ▲{Space}

;由于上面代码用了点号做修饰符，这里恢复点号按键`本身的功能
`::SendInput ``
+`::SendInput ~
	
;20140719：感觉这个快捷键很别扭，松开才发出，用tc时很不顺手，因此暂时取消了先
;制作一个输入制表符的快捷键
Tab & q::
{
	Send {ASC 9}
	return
}

;由于上面代码用了tab做修饰符，这里恢复tab键本身的功能
$Tab::send {Tab}
}

;-------------------------------------------------------------------------------

;~ 以下提供Evernote的各种编辑快捷键

;-------------------------------------------------------------------------------

#IfWinActive ahk_class (ENSingleNoteView|ENMainFrame)	
{	
;这种通过正则写group的技巧特别棒
;修改为Evernote组，但不成功
;GroupAdd, Evernote, ahk_class ENSingleNoteView
;GroupAdd, Evernote, ahk_class ENMainFrame
;#IfWinActive ahk_group Evernote

	;字体红色
	!1::	
	{
		Send ^c
		Sleep, 100
		t := WinClip.GetText()
		html = <span style="color: red;"><b>%t%</b></span>
		WinClip.Clear()
		WinClip.SetHTML(html)
		Send ^v
		Return
	}

	;字体蓝色
	!2::	
	{
		Send ^c
		Sleep, 100
		t := WinClip.GetText()
		html = <span style="color: blue;">%t%</span>
		WinClip.Clear()
		WinClip.SetHTML(html)
		Send ^v
		Return
	}

	;20140718修改：绿色不常用，因此删除
	;字体绿色
	/*!3::	
	{
		Send ^c
		Sleep, 100
		t := WinClip.GetText()
		html = <span style="color: green;">%t%</span>
		WinClip.Clear()
		WinClip.SetHTML(html)
		Send ^v
		Return
	}
	*/

	;字体灰色
	!3::	
	{
		Send ^c
		Sleep, 100
		t := WinClip.GetText()
		html = <span style="color: #D6D6D6;">%t%</span>
		WinClip.Clear()
		WinClip.SetHTML(html)
		Send ^v
		Return
	}

	;背景色绿色
	#1::	
	{
		Send ^c
		Sleep, 100
		t := WinClip.GetText()
		html = <span style="background:rgb(144, 238, 144);">%t%</span>
		WinClip.Clear()
		WinClip.SetHTML(html)
		Send ^v
		Return
	}

	;背景色黄色
	#2::
	{
		Send ^c
		Sleep, 100
		t := WinClip.GetText()
		html = <span style="background:rgb(255, 250, 165);">%t%</span>
		WinClip.Clear()
		WinClip.SetHTML(html)
		Send ^v
		Return
	}

	;背景色蓝色
	#3::	
	{
		Send ^c
		Sleep, 100
		t := WinClip.GetText()
		html = <span style="background:rgb(173, 216, 230);">%t%</span>
		WinClip.Clear()
		WinClip.SetHTML(html)
		Send ^v
		Return
	}

	;背景色灰色
	#4::	
	{
		Send ^c
		Sleep, 100
		t := WinClip.GetText()
		html = <span style="background:rgb(211, 211, 211);">%t%</span>
		WinClip.Clear()
		WinClip.SetHTML(html)
		Send ^v
		Return
	}

	;方框环绕
	!f::	
	{
		Send ^c
		Sleep, 100
		t := WinClip.GetText()
		html = <td valign="top"><pre style="margin-top: 0px; margin-bottom: 9px; word-wrap: break-word; padding: 8.5px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(245, 245, 245); border: 1px solid rgba(0, 0, 0, 0.148438); word-break: break-all; white-space: pre-wrap; font-family: 微软雅黑">%t%</pre></td>
		WinClip.Clear()
		WinClip.SetHTML(html)
		Send ^v
		Return
	}
}

;-------------------------------------------------------------------------------

;~ 以下提供Explorer下的各种快捷键

;-------------------------------------------------------------------------------

#IfWinActive, ahk_class (Progman|WorkerW|CabinetWClass|ExploreWClass|#32770|CabinetWClass|Clover_WidgetWin_0)
{
	;复制路径
	!1::	
	{
		send ^c
		sleep,200
		clipboard = %clipboard%
		SplitPath, clipboard, , dir
		clipboard = %dir%
		return
		
		;-------------------------------------------------------------------------------
		
		;~ 这是我原先的写法，挺笨的
		;send !d
		;sleep, 10
		;Send ^c
		;sleep, 10
		;send {esc}
		;return
		
		;-------------------------------------------------------------------------------
	}

	;复制文件名
	!2::	
	{
		send ^c
		sleep,200
		clipboard = %clipboard%
		SplitPath, clipboard, name
		clipboard = %name%
		return
	}

	;复制含文件名的完整路径
	!3::	
	{
		send ^c
		sleep,200
		clipboard = %clipboard%
		return
	}
}

;-------------------------------------------------------------------------------

;~ 以下提供Anki下的各种快捷键

;-------------------------------------------------------------------------------

#IfWinActive, ahk_class QWidget
{
	;新建cloze
	F1::
		Send, ^+c
		return
	
	;新建cloze，序号不增加
	F2::
		Send, ^+!c
		return
	
	;增量阅读，把透析的快捷键，改变成F1
	`::
		Send, ^+!q
		return
		
	;增量阅读，添加为析取qa后，自动关闭，方便下一次析取
	^Enter::
		Send, ^{Enter}
		sleep, 300
		Send, {Esc}
		return
}

;-------------------------------------------------------------------------------

;~ 以下提供Firefox下的快捷键

;-------------------------------------------------------------------------------

#IfWinActive ahk_class MozillaWindowClass
{
	;切换到前一标签
	F1::
		Send, ^+{Tab}
		return
	
	;切换到后一标签
	F2::
		Send, ^{Tab}
		return
		
	;关闭当前标签
	`::
		Send, ^w
		return
	
	;还没想好怎么做
	;自动判断是否选中文本，否的话，替换复制为全选+复制
	;^c::
	;	ControlGet,text,selected,,edit1 ;获取选中的文本
	;	if text=
	;		
	;	return 
}

;-------------------------------------------------------------------------------

;~ 以下提供cmd下的快捷键

;-------------------------------------------------------------------------------

#IfWinActive ahk_class ConsoleWindowClass
{
	~Esc::
	{
		if (A_ThisHotKey = A_PriorHotKey and A_TimeSincePriorHotkey < 500)
		{
			WinClose A ;这里的大写字母A已经表示了当前激活的窗口,不必更改!
		}
		return
	}
}

;-------------------------------------------------------------------------------

;~ 以下提供M$ Word下的快捷键

;-------------------------------------------------------------------------------

#IfWinActive ahk_class OpusApp
{
	;导航窗格的开关，需要先在word里将导航窗格的快捷键指定为^!+p
	F1::
	{
		Send, ^!+p
		return
	}
	
	`::
		Send, ^!m
		return
}

;-------------------------------------------------------------------------------

;~ 以下提供MLO下的快捷键

;-------------------------------------------------------------------------------

#IfWinActive ahk_class TfrmMyLifeMain
{
	;mlo的备注不支持中文路径的超链接，因此加这个脚本
	F1::
	{
		Send ^c
		Run %clipboard%
		Return
	}
}

;-------------------------------------------------------------------------------

;~ 以下提供totalcmd中的快捷键

;-------------------------------------------------------------------------------

#IfWinActive ahk_class TTOTAL_CMD
{
	;关闭当前标签
	`::
		Send, ^w
		return
}










